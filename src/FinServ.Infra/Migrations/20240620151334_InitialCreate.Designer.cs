// <auto-generated />
using System;
using FinServ.Infra.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinServ.Infra.Migrations
{
    [DbContext(typeof(FinServContext))]
    [Migration("20240620151334_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinServ.Domain.Entities.Clientes.Investidor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Investidores", (string)null);
                });

            modelBuilder.Entity("FinServ.Domain.Entities.Contas.ContaInvestimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InvestidorId")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("InvestidorId");

                    b.ToTable("ContasInvestimento", (string)null);
                });

            modelBuilder.Entity("FinServ.Domain.Entities.ProdutosFinanceiros.ProdutoFinanceiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContaInvestimentoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataInvestimento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TaxaJuros")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorInvestido")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ContaInvestimentoId");

                    b.HasIndex("TipoId");

                    b.ToTable("ProdutosFinanceiros", (string)null);
                });

            modelBuilder.Entity("FinServ.Domain.Entities.ProdutosFinanceiros.TipoProdutoFinanceiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposProdutoFinanceiro", (string)null);
                });

            modelBuilder.Entity("FinServ.Domain.Entities.Contas.ContaInvestimento", b =>
                {
                    b.HasOne("FinServ.Domain.Entities.Clientes.Investidor", "Investidor")
                        .WithMany()
                        .HasForeignKey("InvestidorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Investidor");
                });

            modelBuilder.Entity("FinServ.Domain.Entities.ProdutosFinanceiros.ProdutoFinanceiro", b =>
                {
                    b.HasOne("FinServ.Domain.Entities.Contas.ContaInvestimento", null)
                        .WithMany("ProdutosFinanceiros")
                        .HasForeignKey("ContaInvestimentoId");

                    b.HasOne("FinServ.Domain.Entities.ProdutosFinanceiros.TipoProdutoFinanceiro", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("FinServ.Domain.Entities.Contas.ContaInvestimento", b =>
                {
                    b.Navigation("ProdutosFinanceiros");
                });
#pragma warning restore 612, 618
        }
    }
}
